{
  "stats": {
    "suites": 1,
    "tests": 9,
    "passes": 5,
    "pending": 0,
    "failures": 4,
    "start": "2023-05-17T08:06:06.392Z",
    "end": "2023-05-17T08:06:21.342Z",
    "duration": 14950,
    "testsRegistered": 9,
    "passPercent": 55.55555555555556,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "908df311-ad83-4ca2-a7b5-d901a5d5e4e9",
      "title": "",
      "fullFile": "/Users/leela/Desktop/botium_trial_three/spec/botium.spec.js",
      "file": "/spec/botium.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
          "title": "Dialogflow Sample",
          "fullFile": "/Users/leela/Desktop/botium_trial_three/spec/botium.spec.js",
          "file": "/spec/botium.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Dialogflow Sample\"",
              "fullTitle": "Dialogflow Sample \"before all\" hook in \"Dialogflow Sample\"",
              "timedOut": false,
              "duration": 1074,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(timeout)\nbb.beforeAll().then(() => done()).catch(done)",
              "err": {},
              "uuid": "a57d32f6-738f-4755-af80-66bb6aa4e76b",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Dialogflow Sample\"",
              "fullTitle": "Dialogflow Sample \"before each\" hook in \"Dialogflow Sample\"",
              "timedOut": false,
              "duration": 20,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(timeout)\nbb.beforeEach().then(() => done()).catch(done)",
              "err": {},
              "uuid": "ff1edc53-048c-4a60-99ca-e37e49b1b9f4",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Dialogflow Sample\"",
              "fullTitle": "Dialogflow Sample \"after all\" hook in \"Dialogflow Sample\"",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(timeout)\nbb.afterAll().then(() => done()).catch(done)",
              "err": {},
              "uuid": "a3502d0d-3de0-40ec-a851-6d9d843e2849",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Dialogflow Sample\"",
              "fullTitle": "Dialogflow Sample \"after each\" hook in \"Dialogflow Sample\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "this.timeout(timeout)\nbb.afterEach().then(() => done()).catch(done)",
              "err": {},
              "uuid": "e9437730-cc3e-430b-ad8d-58b31dfaa2c5",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "bot_convo",
              "fullTitle": "Dialogflow Sample bot_convo",
              "timedOut": false,
              "duration": 1052,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "3c5f1d1e-5610-4919-9331-d1561b766e50",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L1",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L1",
              "timedOut": false,
              "duration": 2333,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "506a8ecd-2373-4701-91b2-f103de04617a",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L2",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L2",
              "timedOut": false,
              "duration": 2612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "d4da087e-afa5-4c55-ba5c-a5ade43f25de",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L3",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L3",
              "timedOut": false,
              "duration": 2209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "fa058028-2274-4d41-814c-2caafbafe2c0",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L4",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L4",
              "timedOut": false,
              "duration": 1340,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: coffee_order_basic/HELLO_UTT-L4/Line 6: Bot response (on Line 3: #me - good evening) \"Say that one more time?\" expected to match one of \"Hi! How are you doing?\", \"Hello! How can I help you?\", \"Good day! What can I do for you today?\", \"Greetings! How can I assist?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Hi! How are you doing?\",\"Hello! How can I help you?\",\"Good day! What can I do for you today?\",\"Greetings! How can I assist?\"]  - Actual: \"Say that one more time?\"\r\nINPUT: good evening\r\n------------ TRANSCRIPT ----------------------------\r\n#me: good evening\r\n#bot: Say that one more time?",
                "estack": "Error: coffee_order_basic/HELLO_UTT-L4/Line 6: Bot response (on Line 3: #me - good evening) \"Say that one more time?\" expected to match one of \"Hi! How are you doing?\", \"Hello! How can I help you?\", \"Good day! What can I do for you today?\", \"Greetings! How can I assist?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Hi! How are you doing?\",\"Hello! How can I help you?\",\"Good day! What can I do for you today?\",\"Greetings! How can I assist?\"]  - Actual: \"Say that one more time?\"\r\nINPUT: good evening\r\n------------ TRANSCRIPT ----------------------------\r\n#me: good evening\r\n#bot: Say that one more time?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_three/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "bc025176-fa52-46d4-afdc-8c0a5ad731ce",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L5",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L5",
              "timedOut": false,
              "duration": 1773,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {},
              "uuid": "9d5da86f-9058-42bd-8cc1-f9d09fce8aae",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_basic/HELLO_UTT-L6",
              "fullTitle": "Dialogflow Sample coffee_order_basic/HELLO_UTT-L6",
              "timedOut": false,
              "duration": 783,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: coffee_order_basic/HELLO_UTT-L6/Line 6: Bot response (on Line 3: #me - anyone at home ?) \"Say that one more time?\" expected to match one of \"Hi! How are you doing?\", \"Hello! How can I help you?\", \"Good day! What can I do for you today?\", \"Greetings! How can I assist?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Hi! How are you doing?\",\"Hello! How can I help you?\",\"Good day! What can I do for you today?\",\"Greetings! How can I assist?\"]  - Actual: \"Say that one more time?\"\r\nINPUT: anyone at home ?\r\n------------ TRANSCRIPT ----------------------------\r\n#me: anyone at home ?\r\n#bot: Say that one more time?",
                "estack": "Error: coffee_order_basic/HELLO_UTT-L6/Line 6: Bot response (on Line 3: #me - anyone at home ?) \"Say that one more time?\" expected to match one of \"Hi! How are you doing?\", \"Hello! How can I help you?\", \"Good day! What can I do for you today?\", \"Greetings! How can I assist?\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Hi! How are you doing?\",\"Hello! How can I help you?\",\"Good day! What can I do for you today?\",\"Greetings! How can I assist?\"]  - Actual: \"Say that one more time?\"\r\nINPUT: anyone at home ?\r\n------------ TRANSCRIPT ----------------------------\r\n#me: anyone at home ?\r\n#bot: Say that one more time?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_three/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "159d2ae7-a045-4846-8e46-67e094cc01c3",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "coffee_order_convo",
              "fullTitle": "Dialogflow Sample coffee_order_convo",
              "timedOut": false,
              "duration": 799,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: coffee_order_convo/Line 6: Bot response (on Line 3: #me - cup) \"What type of coffee would you like to have\" expected to match \"Its a perfect day for a cup of coffee!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Its a perfect day for a cup of coffee!\"]  - Actual: \"What type of coffee would you like to have\"\r\nINPUT: cup\r\n------------ TRANSCRIPT ----------------------------\r\n#me: cup\r\n#bot: What type of coffee would you like to have",
                "estack": "Error: coffee_order_convo/Line 6: Bot response (on Line 3: #me - cup) \"What type of coffee would you like to have\" expected to match \"Its a perfect day for a cup of coffee!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"Its a perfect day for a cup of coffee!\"]  - Actual: \"What type of coffee would you like to have\"\r\nINPUT: cup\r\n------------ TRANSCRIPT ----------------------------\r\n#me: cup\r\n#bot: What type of coffee would you like to have\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_three/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "a688eecb-7e6b-48e9-932e-8e4521cced65",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "give me picture",
              "fullTitle": "Dialogflow Sample give me picture",
              "timedOut": false,
              "duration": 705,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "if (this.container) {\n  debug(`running testcase${convo.header.toString()}`)\n  convo.Run(this.container)\n    .then(() => {\n      debug(`Test Case \"${convo.header.name}\" ready, calling done function.`)\n      testcaseDone()\n    })\n    .catch((err) => {\n      debug(`Test Case \"${convo.header.name}\" failed: ${util.inspect(err)}`)\n      testcaseDone(this.wrapBotiumError(err))\n    })\n} else {\n  testcaseDone(new Error('Botium Initialization failed. Please see error messages above (enable debug logging).'))\n}",
              "err": {
                "message": "Error: give me picture/Line 6: Bot response (on Line 3: #me - Hello, Bot!) \"Good day! What can I do for you today?\" expected to match \"You said: Hello, Bot!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"You said: Hello, Bot!\"]  - Actual: \"Good day! What can I do for you today?\"\r\nINPUT: Hello, Bot!\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Hello, Bot!\r\n#bot: Good day! What can I do for you today?",
                "estack": "Error: give me picture/Line 6: Bot response (on Line 3: #me - Hello, Bot!) \"Good day! What can I do for you today?\" expected to match \"You said: Hello, Bot!\"\r\n########################################\r\nASSERTION FAILED in Text Match Asserter - Expected: [\"You said: Hello, Bot!\"]  - Actual: \"Good day! What can I do for you today?\"\r\nINPUT: Hello, Bot!\r\n------------ TRANSCRIPT ----------------------------\r\n#me: Hello, Bot!\r\n#bot: Good day! What can I do for you today?\n    at BotiumBindings.wrapBotiumError (node_modules/botium-bindings/src/BotiumBindings.js:77:14)\n    at /Users/leela/Desktop/botium_trial_three/node_modules/botium-bindings/src/BotiumBindings.js:134:33",
                "diff": null
              },
              "uuid": "9d51266e-f81d-4064-a608-4156d9ef9845",
              "parentUUID": "b8c4dd87-32d5-48d5-b656-c3b89d77ffb7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3c5f1d1e-5610-4919-9331-d1561b766e50",
            "506a8ecd-2373-4701-91b2-f103de04617a",
            "d4da087e-afa5-4c55-ba5c-a5ade43f25de",
            "fa058028-2274-4d41-814c-2caafbafe2c0",
            "9d5da86f-9058-42bd-8cc1-f9d09fce8aae"
          ],
          "failures": [
            "bc025176-fa52-46d4-afdc-8c0a5ad731ce",
            "159d2ae7-a045-4846-8e46-67e094cc01c3",
            "a688eecb-7e6b-48e9-932e-8e4521cced65",
            "9d51266e-f81d-4064-a608-4156d9ef9845"
          ],
          "pending": [],
          "skipped": [],
          "duration": 13606,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}